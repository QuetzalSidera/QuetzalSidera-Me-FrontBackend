@using Grpc.Share.Protos.WwwModels.HtmlHeader
@using Grpc.Share.Tools
@inject Grpc.Client.Www.HtmlHeaderDataService HtmlHeaderDataService
@inject Models.AppState AppState

<!DOCTYPE html>
<html lang="@AppState.LangTypeInstance.ToHtmlLang()">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    @if (HtmlHeaderModel != null)
    {
        <title>@HtmlHeaderModel.Title.ToLangString(AppState.LangTypeInstance)</title>
        <link rel="icon" type="image/png" href="@HtmlHeaderModel.IconLink"/>
    }
    <link rel="stylesheet" href="stylesheet/style.css">
    <link href="https://cdn.jsdelivr.net/npm/qweather-icons@1.8.0/font/qweather-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <base href="/"/>
    <ImportMap/>
    <HeadOutlet/>
</head>
<body>
<CascadingValue Value="AppState.LangTypeInstance" Name="LangType">
    <Routes/>
</CascadingValue>
<script src="_framework/blazor.web.js"></script>
</body>

</html>

@code{
    public HtmlHeaderModel? HtmlHeaderModel;

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task Load()
    {
        HtmlHeaderModel = await HtmlHeaderDataService.GetHtmlHeaderAsync();
        StateHasChanged();
    }

}
