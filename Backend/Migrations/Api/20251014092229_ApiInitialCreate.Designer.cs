// <auto-generated />
using Backend.ApiEntities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations.Api
{
    [DbContext(typeof(ApiContext))]
    [Migration("20251014092229_ApiInitialCreate")]
    partial class ApiInitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Backend.ApiEntities.AdminEntity", b =>
                {
                    b.Property<string>("MailBox")
                        .HasColumnType("TEXT");

                    b.HasKey("MailBox");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            MailBox = "1969154690@qq.com"
                        });
                });

            modelBuilder.Entity("Backend.ApiEntities.ApiAuthTokenEntity", b =>
                {
                    b.Property<string>("ApiAuthTokenGuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateTimestamp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserGuid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ApiAuthTokenGuid");

                    b.ToTable("ApiAuthTokens");
                });

            modelBuilder.Entity("Backend.ApiEntities.FriendsCardEntity", b =>
                {
                    b.Property<string>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddOn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardPictureUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentDict")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleDict")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Guid");

                    b.ToTable("FriendsCardCheckList");
                });
#pragma warning restore 612, 618
        }
    }
}
